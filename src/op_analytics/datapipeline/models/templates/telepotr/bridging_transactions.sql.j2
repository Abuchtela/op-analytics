WITH x AS (
  SELECT
    l.dt
    , l.block_timestamp
    , l.block_number
    , l.chain AS src_chain
    , l.chain_id AS src_chain_id
    , l.address AS contract_address
    , l.transaction_hash
    , l.topics.string_split(',')[3].substring(3).parse_reversed_hex() AS deposit_id
    , '0x' || l.data.substring(3).substring(25, 40) AS input_token_address
    , '0x' || l.data.substring(3).substring(89, 40) AS output_token_address
    , cast(l.topics.string_split(',')[2].substring(3).parse_reversed_hex() AS String) AS dst_chain_id
    , l.data.substring(3).substring(129, 64).parse_reversed_hex() AS input_amount
    , l.data.substring(3).substring(193, 64).parse_reversed_hex() AS output_amount
    , l.data.substring(3).substring(257, 64).parse_reversed_hex() AS quote_timestamp
    , l.data.substring(3).substring(321, 64).parse_reversed_hex() AS fill_deadline
    , l.data.substring(3).substring(385, 64).parse_reversed_hex() AS exclusivity_deadline
    , '0x' || l.data.substring(3).substring(449, 40) AS recipient_address
    , '0x' || l.data.substring(3).substring(513, 64).right(40) AS relayer_address
    , t.from_address AS depositor_address
    , CASE
      WHEN substring(t.input, -10) = '1dc0de0001' THEN 'SuperBridge'
      WHEN substring(t.input, -10) = '1dc0de0002' THEN 'Brid.gg'
    END AS integrator
    , l.log_index
    , wei_to_eth(CASE WHEN t.gas_price = 0 THEN 0 ELSE t.gas_price * t.receipt_gas_used END) AS l2_fee
    , wei_to_eth(CASE WHEN t.gas_price = 0 THEN 0 ELSE t.receipt_l1_fee END) AS l1_fee
  FROM {{ raw_logs }} AS l
  INNER JOIN {{ raw_transactions }} AS t
    ON
      l.transaction_hash = t.hash
      AND l.block_timestamp = t.block_timestamp
      AND l.block_number = t.block_number
      AND l.chain = t.chain
  INNER JOIN {{ across_bridge_metadata }} AS c
    ON
      l.chain = c.chain_name
      AND l.address = lower(c.spokepool_address)
  WHERE
    1 = 1
    AND string_split(l.topics, ',')[1] = '0xa123dc29aebf7d0c3322c8eeb5b999e859f39937950ed31056532713d0de396f'
    AND l.network = 'mainnet'
    AND t.receipt_status = 1
    AND t.gas_price > 0
    AND l.data IS NOT null AND l.data != '' -- info is there
)

SELECT
  x.*
  , CASE
    WHEN x.dst_chain_id = 1 THEN 'ethereum'
    ELSE c.chain_name
  END AS dst_chain
  , x.l2_fee + x.l1_fee AS tx_fee
FROM x
LEFT JOIN {{ op_stack_chain_metadata }} AS c
  ON x.dst_chain_id = c.mainnet_chain_id
WHERE x.integrator IS NOT null
