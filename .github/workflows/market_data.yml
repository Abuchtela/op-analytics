name: Run Market Data Updates

# Controls when the workflow will run
on:
  # Run on a schedule - Every 5 mins
  schedule:
      - cron: '*/5 * * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.11'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'

      - name: Install pipenv
        run: python -m pip install pipenv

      - name: Install Dependencies
        run: pipenv install --dev

      - name: Generate .py files
        working-directory: reference_data/market_data
        run: pipenv run jupyter nbconvert --to python get_market_data.ipynb
                  
      - name: Run py
        working-directory: reference_data/market_data
        run: pipenv run python get_market_data.py
        env:
          L1_ETHERSCAN_API: ${{ secrets.L1_ETHERSCAN_API }}

      # Handle unstaged changes before pulling
      - name: Stash changes before pulling
        run: git stash --include-untracked

      - name: Pull changes with rebase
        run: git pull --rebase origin main

      - name: Apply stashed changes
        run: git stash pop || true  # Ignore conflicts

      - name: Commit files
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add --all
          if git diff --staged --quiet; then
              echo "No changes to commit."
              echo "push=false" >> $GITHUB_ENV
          else
              git commit -m "GH Action Update - Update Market Data"
              echo "push=true" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Push changes
        if: env.push == 'true'
        run: git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
