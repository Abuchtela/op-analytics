name: Run OP Stack Metadata Airtable -> csv and Dune

# Controls when the workflow will run
on:
  # Run on a schedule - “At 02:01 on Sunday.” - few mins for dependencies to install
  schedule:
      - cron: '1 2 * * 0'
  push:
    paths:
      - 'op_chains_tracking/inputs/**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
  # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Display System Info
        run: |
          free -h
          df -h

      # Set up Python and Node.js
      - name: Set up Python and Node.js
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.11'
        # Set max space to see if this helps with timeouts
        env:
          node-version: '16'


      - name: Install pipenv
        run: |
          python -m pip install pipenv

      # Add any missing dependencied to pipfile
      - name: Install Dependencies
        run: |
          pipenv install --dev
    # Runs a single command using the runners shell
      # Generate .py files for each notebook
      - name: Generate py files
        working-directory: op_chains_tracking
        run: |
          pipenv run jupyter nbconvert --to python inputs/clean_chain_metadata_and_upload.ipynb
          pipenv run jupyter nbconvert --to python read_op_chain_metadata_airtable.ipynb
          
      - name: Generate Chain Metadata
        working-directory: op_chains_tracking/inputs
        run: |
          pipenv run python clean_chain_metadata_and_upload.py
        env:
          DUNE_API_KEY: ${{ secrets.DUNE_API_KEY }}

      - name: Run Files
        working-directory: op_chains_tracking
        run: |
          pipenv run python read_op_chain_metadata_airtable.py
        env:
          AIRTABLE_DEVREL_BASE_ID: ${{ secrets.AIRTABLE_DEVREL_BASE_ID }}
          AIRTABLE_API_TOKEN: ${{ secrets.AIRTABLE_API_TOKEN }}
          DUNE_API_KEY: ${{ secrets.DUNE_API_KEY }}


    # commit_results:
      # if: ${{ always() }} #Always runs even if prior jobs fail - so that one bad job doesn't f everything up.
      # needs: build #[build, app_fees, op_summer, total_tvl_flow]
      # runs-on: ubuntu-latest
      # steps:
        # Runs a set of commands using the runners shell
        # - name: Run a multi-line script
        #  run: |
        #    echo Add other actions to build,
        #    echo test, and deploy your project.

        # Commit and push output images
        # https://github.com/orgs/community/discussions/26672
#       - name: Pull changes
#         run: |
#           git pull origin main
          
#       - name: Commit files
#         id: commit
#         run: |
#           git config --local user.email "action@github.com"
#           git config --local user.name "github-actions"
#           git add --all
#           # https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/
#           if [-z "$(git status --porcelain)"]; then
#              # echo "::set-output name=push::false"
#              echo "push=false" >> $GITHUB_OUTPUT
#           else
#              git commit -m "GH Action Update - Rewards Tracking" -a
#              # echo "::set-output name=push::true"
#              echo "push=true" >> $GITHUB_OUTPUT
#           fi
#         shell: bash
#       - name: Push changes
#         if: steps.commit.outputs.push == 'true'
#         uses: ad-m/github-push-action@master
#         with:
#            github_token: ${{ secrets.GITHUB_TOKEN }}
